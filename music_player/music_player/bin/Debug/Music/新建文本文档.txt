用matlab写的两次同步的误差系统的模拟图像。
function y=wuchaxitong(t,x);
a=35;b=4;c=25;d=5;e=35;f=100;
k1=1277;k2=1388;k3=55;k4=1;
y=zeros(8,1);
y(1)=a*((x(2)-x(6))-(x(1)-x(5)))+e*(x(2)-x(6))*(x(3)-x(7))+(x(3)-x(7))+e*(x(2)-x(6))*x(7)+e*x(6)*(x(3)-x(7))-k1*(x(1)-x(5));
y(2)=c*(x(1)-x(5))-d*(x(1)-x(5))*(x(3)-x(7))-d*x(5)*(x(3)-x(7))-d*x(7)*(x(1)-x(5))-(x(2)-x(6))+(x(4)-x(8))-k2*(x(2)-x(6));
y(3)=(x(1)-x(5))*(x(2)-x(6))+(x(1)-x(5))*x(6)+x(5)*(x(2)-x(6))-b*(x(3)-x(7))-k3*(x(3)-x(7));
y(4)=-f*(x(2)-x(6))-(k4+1)*(x(4)-x(8));
tspan=[0:0.001:4];%求解时间为2秒也可以 tspan=[0 2]表示自动时间步长
x0=[-1;30;2;10;-3;4;0.2;6];%初值
[T,Y]=ode45('wuchaxitong',tspan,x0);%用龙格库塔法求解
subplot(4,1,1),plot(T,Y(:,1)),xlabel('t/s'),ylabel('e1')
subplot(4,1,2),plot(T,Y(:,2)),xlabel('t/s'),ylabel('e2')
subplot(4,1,3),plot(T,Y(:,3)),xlabel('t/s'),ylabel('e3')
subplot(4,1,4),plot(T,Y(:,4)),xlabel('t/s'),ylabel('e4')
上面的是误差系统，下面的是画的误差系统的图像，不知道是不是你需要的，我做的是四维的系统


基于Matlab的lorenz混沌系统仿真
http://www.cqvip.com/read/read.aspx?id=48459868#
http://www.doc88.com/p-5374122438920.html



http://down.tech.sina.com.cn/page/50400.html

qt下载
Qt 5.4.1 for Windows 32-bit (MinGW 4.9.1, 856 MB)    (info)
http://www.qt.io/download-open-source/#section-2
公开课问答专区http://ask.itcast.cn/explore/category-5?gkk  